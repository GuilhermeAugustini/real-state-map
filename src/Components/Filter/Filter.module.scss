@import './../../index.module.scss';

.filter {
  composes: flexColumn from global;
  max-width: 50%;
}

.filterUp,
.filterDown {
  composes: alignCenter from global;
  gap: 20px;
  padding-bottom: 16px;
}

.inputSearch {
  composes: borderGray alignCenter from global;
  position: relative;
  width: 100%;
  height: 40px;
  padding: 0 1rem;
  & > input {
    width: 100%;
    height: 100%;
    padding-left: 1rem;
    font: normal 400 1.6rem/1.5 'Oxygen', sans-serif;
    color: $independence-2;
    appearance: none;
    border: 0;
    &::placeholder {
      color: $independence-2 + 75%;
      opacity: 1;
    }
  }
}

.button {
  composes: borderGray flexCenter from global;
  width: 131px;
  flex: 0 0 131px;
  height: 40px;
  padding: 5px;
  font: normal 400 1.6rem/1.5 'Oxygen', sans-serif;
  color: $independence-2;
  appearance: none;
  background-color: #fff;
  border: 0;
  cursor: pointer;
  & > span {
    padding-left: 12px;
  }
}

.results {
  flex: 0 0 auto;
  font-size: 1.6rem;
  padding-left: 20px;
  margin-bottom: 0;
  margin-right: auto;
}

.sort {
  composes: flexCenter from global;
  font: normal 400 1.6rem/1.5 'Oxygen', sans-serif;
  & > span {
    padding-right: 10px;
  }
}

.views {
  composes: flexCenter from global;
  gap: 10px;
}

.viewButton {
  composes: flexCenter from global;
  width: 40px;
  flex: 0 0 40px;
  height: 40px;
  background-color: transparent;
  border: 0;
  border-radius: $border-radius;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
  &:hover > svg > path {
    fill: $maximum-blue-purple;
  }
}

.active {
  background: rgba(72, 67, 92, 0.07);
  box-shadow: inset 0px 0px 4px 2px rgba(0, 0, 0, 0.02);
  & > svg > path {
    fill: $maximum-blue-purple;
  }
}
